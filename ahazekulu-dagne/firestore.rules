rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /{document=**} {
            allow read: if request.auth != null; // Only authenticated users can read
            allow write: if request.auth != null && request.resource.data.keys().hasAll(['user']) && request.resource.data.user == request.auth.uid; // Only the user can write their own data
        }
        match /places/{placeId} {
            allow read: if true; // Publicly readable places (adjust as needed)
            allow write: if request.auth != null; // Only authenticated users can write places
        }
        match /posts/{postId} {
            allow read: if true; // Publicly readable posts (adjust as needed)
            allow write: if request.auth != null && request.resource.data.keys().hasAll(['user']) && request.resource.data.user == request.auth.uid; // Only the user can write their posts
        }
        match /users/{userId} {
            allow read: if request.auth != null && request.auth.uid == userId; // Only the user can read their own profile
            allow write: if request.auth != null && request.auth.uid == userId; // Only the user can write their own profile
        }
        match /agents/{agentId} {
            allow read: if true; // Publicly readable agents (adjust as needed)
            allow write: if request.auth != null; // Only authenticated users can write agents
        }
        match /latest/{latestId} {
            allow read: if true; // Publicly readable latest updates (adjust as needed)
            allow write: if request.auth != null; // Only authenticated users can write latest updates
        }
    }
}